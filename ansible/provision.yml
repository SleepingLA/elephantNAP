#!/usr/bin/env ansible-playbook
---

##############################################################################
# Provision  instances
##############################################################################


- name: Deploy multiple duplicate cloud instances in OpenStack
  hosts: localhost
  vars_files:
    - vars/provision.vars

  tasks:

    - set_fact: key_name="{{ key_name_prefix }}-{{ cluster_id }}"

    - name: Connect to the OS Cloud
      # assume RC file has already been sourced
      os_auth:

    - name: Launch Hadoop slave instances
      os_server:
        name: "{{ vm_prefix }}-{{ cluster_id }}-{{ item }}"
        flavor: "{{ flavor }}"
        image: "{{ image }}"
        key_name: "{{ key_name }}"
        boot_from_volume: "{{ boot_from_volume }}"
        terminate_volume: true
        #volume_size: 10
        state: present
        wait: true
        network: "{{ network }}"
        security_groups: "{{ security_groups }}"
        auto_ip: false
      register: newnodes
      with_sequence:
        count={{ count }}

    - add_host: name="{{ item.server.private_v4 }}"
                groups="cluster.nodes"
                instance_name="{{ item.server.name }}"
                ansible_ssh_host="{{ item.server.private_v4 }}"
                ansible_ssh_private_key_file="~/.ssh/{{ key_name }}"
                ansible_ssh_common_args="-o StrictHostKeyChecking=no"
      with_items: "{{ newnodes.results }}"

#    - local_action: copy content={{ item.server }} dest=/home/ubuntu/test.output
#      with_items: "{{ newnodes.results }}"

    - debug: var=hostvars[inventory_hostname]
#    - debug: var=newnodes
#    - debug: var=newnodes.results

    - name: create static inventory
      template: src=template/templatehost.j2 dest=./hosts.prod

    - name:  create node varaible inventory
      template: src=template/templatenode.j2 dest=./nodes.prod


##############################################################################
# Play 2 - Configure nodes in next ansiblefile
##############################################################################
- name:  waiting
  hosts: cluster.nodes
  become: yes
  become_method: sudo
  gather_facts: false
  tasks:
    - name: "Wait for SSH banners"
      local_action: wait_for port=22 host="{{ inventory_hostname }}" search_regex=OpenSSH delay=60
      become: False



